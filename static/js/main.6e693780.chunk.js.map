{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","Header.js","App.js","serviceWorker.js","aws-exports.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Header","Navbar","bg","variant","expand","sticky","Brand","width","height","className","src","process","alt","class","Nav","style","Button","ButtonGroup","DropdownButton","title","Dropdown","Item","Divider","Component","withAuthenticator","Boolean","window","location","hostname","match","awsmobile","Amplify","configure","awsconfig","I18n","setLanguage","putVocabularies","en","es","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e693780.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t408,\n\t\t16\n\t],\n\t\"./amplify-auth-container.entry.js\": [\n\t\t409,\n\t\t17\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t410,\n\t\t18\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t411,\n\t\t5\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t412,\n\t\t19\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t413,\n\t\t4\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t414,\n\t\t20\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t415,\n\t\t6\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t416,\n\t\t21\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t417,\n\t\t22\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t418,\n\t\t23\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t419,\n\t\t24\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t420,\n\t\t25\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t421,\n\t\t26\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t422,\n\t\t7\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t423,\n\t\t27\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t424,\n\t\t28\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t425,\n\t\t29\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t426,\n\t\t30\n\t],\n\t\"./amplify-radio-button_3.entry.js\": [\n\t\t427,\n\t\t8\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t428,\n\t\t9\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t429,\n\t\t10\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t430,\n\t\t11\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t431,\n\t\t12\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t432,\n\t\t13\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t433,\n\t\t31\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t434,\n\t\t14\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t435,\n\t\t32\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 258;\nmodule.exports = webpackAsyncContext;","import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { ButtonGroup } from 'react-bootstrap';\r\nimport { DropdownButton } from 'react-bootstrap';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n        <Navbar bg=\"transparent\" variant=\"transparent\" expand=\"lg\" sticky=\"top\">\r\n        <Navbar.Brand variant=\"outline-info\">\r\n        <img width=\"70px\" height=\"auto\" className=\"img-responsive\" src={process.env.PUBLIC_URL + '/HOOD2.png'}  alt=\"HOOD2\" />\r\n        <span class=\"navbar-brand\">&nbsp;&nbsp;Portal Calli</span>\r\n        </Navbar.Brand>\r\n        <Nav className=\"justify-content-end\" style={{ width: \"100%\" }}>\r\n        <Button variant=\"outline-info\">Inicio</Button>\r\n        <ButtonGroup>\r\n        <DropdownButton variant=\"outline-info\" title=\"Bancos\">\r\n          <Dropdown.Item >Informe de Cuentas</Dropdown.Item>\r\n          <Dropdown.Item >Conciliación de Cuentas</Dropdown.Item>\r\n          <Dropdown.Item >Administración de Cuentas</Dropdown.Item>\r\n          <Dropdown.Divider/>\r\n          <Dropdown.Item >Agregar Gasto</Dropdown.Item>  \r\n          <Dropdown.Item >Nueva Cuenta</Dropdown.Item>\r\n          <Dropdown.Item >Nueva Cuenta Extraordinaria</Dropdown.Item>\r\n          <Dropdown.Item >Ajuste Cuotas de Mantenimiento</Dropdown.Item>              \r\n        </DropdownButton>\r\n        <DropdownButton variant=\"outline-info\" title=\"Administración\">\r\n          <Dropdown.Item >Administración de espacios</Dropdown.Item>\r\n          <Dropdown.Item >Administración de usuarios</Dropdown.Item>\r\n          <Dropdown.Item >Administración de Personal</Dropdown.Item>\r\n          <Dropdown.Item >Administración de Proveedores</Dropdown.Item>  \r\n          <Dropdown.Item >Administración de bienes privados</Dropdown.Item>\r\n          <Dropdown.Item >Administración de activos</Dropdown.Item>\r\n        </DropdownButton>\r\n        <Button variant=\"outline-info\">Proyectos</Button>\r\n        <Button variant=\"outline-info\">Comunicación</Button>\r\n        <Button variant=\"outline-info\">Gobierno</Button>\r\n        </ButtonGroup>\r\n        </Nav>\r\n        </Navbar> )\r\n    }\r\n}","// Librerías usadas por la aplicación\nimport React from \"react\";\nimport \"./App.css\";\nimport { withAuthenticator, AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport Header from './Header.js'\n\n//Función principal de la aplicación\nfunction App() {\n   return (\n  <div>\n    <Header />\n    <br></br>\n    <br></br>\n    <br></br>\n    <AmplifySignOut />\n  </div>\n  );\n}\n\n// Aplicación por default\nexport default withAuthenticator(App, true);\n\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n\r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n                'This web app is being served cache-first by a service'\r\n                );\r\n              });\r\n            } else {\r\n              // Is not localhost. Just register service worker\r\n              registerValidSW(swUrl, config);\r\n            }\r\n          });\r\n        }\r\n      }\r\n      \r\n      function registerValidSW(swUrl, config) {\r\n        navigator.serviceWorker\r\n          .register(swUrl)\r\n          .then(registration => {\r\n            registration.onupdatefound = () => {\r\n              const installingWorker = registration.installing;\r\n              if (installingWorker == null) {\r\n                return;\r\n              }\r\n              installingWorker.onstatechange = () => {\r\n                if (installingWorker.state === 'installed') {\r\n                  if (navigator.serviceWorker.controller) {\r\n                    // At this point, the updated precached content has been fetched,\r\n                    // but the previous service worker will still serve the older\r\n                    // content until all client tabs are closed.\r\n                    console.log(\r\n                      'New content is available and will be used when all '\r\n                    );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-2\",\n    \"aws_cognito_identity_pool_id\": \"us-east-2:5bb0a020-8339-4fd6-87be-83b0a9a1e7b3\",\n    \"aws_cognito_region\": \"us-east-2\",\n    \"aws_user_pools_id\": \"us-east-2_a9gXiyhXP\",\n    \"aws_user_pools_web_client_id\": \"halk7g2df5348tdpnpbv46u9o\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","/* Librerias usadas en la aplicación */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Amplify from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport { I18n } from 'aws-amplify';\n\n/* Diccionario de etiquetas de Login y acceso, en Inglés y en Español */\nconst authScreenLabels = {\n  en: {\n      'Sign Up': 'Create new account',\n      'Sign Up Account': 'Create a new account'\n  },\n  es: {\n      'Sign Up': 'Crear nueva cuenta',\n      'Sign In': 'Conectarse con cuenta',\n      'Sign in to your account': 'Firmarse con tu cuenta',\n      'Username *': 'Nombre de usuario *',\n      'Password *': 'Clave *',\n      'Forgot your password?': '¿Olvidaste tu clave?',\n      'Reset password' : 'Reinicia tu password',\n      'No account?': '¿No tienes cuenta?',\n      'Create account' : 'Crear una cuenta',\n      'Create a new account': 'Crear una cuenta nueva',\n      'Phone Number *': 'Número de teléfono *',\n      'Email Address *': 'Dirección de correo electrónico *',\n      'Username': 'Nombre de usuario',\n      'Password': 'Clave',\n      'Email': 'Correo electrónico',\n      'Enter your username': 'Captura tu ID de usuario',\n      'Enter your password': 'Captura tu clave',\n      'Have an account?' : '¿Tienes una cuenta?',\n      'Sign in': 'Conectarse con la cuenta',\n      'Create Account': 'CREAR CUENTA',\n      'Sign Out': 'Salir de la aplicación'\n  }\n};\n\n/* Configuración de amplify y AWS para cognito.\n   También, se configuran las etiquetas para la pantalla de login y registro de usuario,\n   se colocan los lenguajes de español (ES) y de inglés (EN). Se colocan los elementos \n   a renderizar\n*/\nAmplify.configure(awsconfig);\nI18n.setLanguage('en');\nI18n.setLanguage('es');\nI18n.putVocabularies(authScreenLabels);\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}